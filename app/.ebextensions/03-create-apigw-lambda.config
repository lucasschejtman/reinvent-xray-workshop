Resources:
  XrayReinventBuilderLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile:
          Fn::Join:
          - "\n"
          - - "'use strict';"
            - ''
            - "// Placeholder Lambda"
            - exports.handler = (event, context, callback) => {
            - "  console.log(JSON.stringify(context));"
            - "  const response = {statusCode:200,body:JSON.stringify({a:`hello`})};"
            - "  callback(null, response);"
            - "};"
      Description: Lambda for the Xray reInvent workshop
      FunctionName: XrayReinventBuilderLambda
      Handler: index.handler
      Role: 
        Fn::GetAtt: [LambdaExecutionRole, Arn]
      Environment:
        Variables:
          REGION: '`{"Ref" : "AWS::Region"}`'
          DDB_TABLE: '`{"Ref" : "XrayReinventBuilderTable"}`'
          SNS_TOPIC: '`{"Ref" : "XrayReinventBuilderTopic"}`'
      Runtime: nodejs8.10
      Timeout: 60
      TracingConfig: 
        Mode: Active
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
      - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      - arn:aws:iam::aws:policy/AmazonSNSFullAccess
  XrayReinventBuilderApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: XrayReinventBuilder API
      Description: API for the Xray reInvent workshop
      FailOnWarnings: true
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: 
        Fn::GetAtt: [XrayReinventBuilderLambda, Arn]
      Principal: apigateway.amazonaws.com
      SourceArn: 
        Fn::Join: [ "", [ 'arn:aws:execute-api:', {Ref: 'AWS::Region'}, ":", {Ref: 'AWS::AccountId'}, ":", {Ref: 'XrayReinventBuilderApi'}, "/*", ] ]
  ApiGatewayCloudWatchLogsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - apigateway.amazonaws.com
          Action:
          - sts:AssumeRole
      Policies:
      - PolicyName: ApiGatewayLogsPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            - logs:PutLogEvents
            - logs:GetLogEvents
            - logs:FilterLogEvents
            Resource: "*"
  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: 
        Fn::GetAtt: [ApiGatewayCloudWatchLogsRole, Arn]
  XrayReinventBuilderApiStage:
    DependsOn:
    - ApiGatewayAccount
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: {Ref: ApiDeployment}
      MethodSettings:
      - DataTraceEnabled: true
        HttpMethod: "*"
        LoggingLevel: INFO
        ResourcePath: "/*"
      RestApiId: {Ref: XrayReinventBuilderApi}
      StageName: LATEST
  ApiDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - XrayReinventBuilderRequest
    Properties:
      RestApiId: {Ref: XrayReinventBuilderApi}
      StageName: XrayReinventBuilderStage
  XrayReinventBuilderResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: {Ref: XrayReinventBuilderApi}
      ParentId: 
        Fn::GetAtt: [XrayReinventBuilderApi, RootResourceId]
      PathPart: xrayreinvent
  XrayReinventBuilderRequest:
    DependsOn: LambdaPermission
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Join: [
            "", 
            [ 
              'arn:aws:apigateway:',
              {Ref: 'AWS::Region'},
              ":lambda:path/2015-03-31/functions/",
              {"Fn::GetAtt": [XrayReinventBuilderLambda, Arn]},
              "/invocations"
            ]
          ]
      ResourceId: {Ref: XrayReinventBuilderResource}
      RestApiId: {Ref: XrayReinventBuilderApi}
Outputs:
  RootUrl:
    Description: Root URL of the API gateway
    Value: 
      Fn::Join: [ "", [ "https://", {Ref: XrayReinventBuilderApi}, ".execute-api.", {Ref: 'AWS::Region'}, ".amazonaws.com" ] ]
